name: build-release

on:
  release:
    types:
      - published

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          '21'    # Latest version
        ]
        # and run on both Linux and Windows
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '21' }} # Only upload artifacts built from LTS java on one OS
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: build/libs/
      - name: Get Version and Platform
        id: properties
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: "./gradle.properties"
          properties: "mod_version minecraft_version"
      - name: Upload artifacts to Modrinth and Curseforge
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: AEWkDOWi
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

          curseforge-id: 413354
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: build/libs/!(*-@(dev|sources|all)).jar
          version-type: release
          loaders: fabric
          version-resolver: exact
          version: ${{ steps.properties.outputs.mod_version }}
          game-versions: ${{ steps.properties.outputs.minecraft_version }}
